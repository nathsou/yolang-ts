#![noImplicitFoundationsImport]

import std/ops
import std/arrays

pub type str = u8[]
pub type cstr = ptr<u8>

#extern
fun putchar(char: u8): u32

pub fun newline(): void {
  putchar(10);
}

pub fun print(msg: str): void {
  mut index = 0
  while index < msg.len {
    putchar(msg[index])
    index += 1
  }

  newline()
}

#meta(printCString)
pub fun print(s: cstr): void

#meta(printUInt)
pub fun print<T in [u8, u16, u32, u64]>(n: T): void

#meta(printInt)
pub fun print<T in [i8, i16, i32, i64]>(n: T): void

#meta(printFloat)
pub fun print<T in [f16, f32, f64]>(x: T): void

pub fun print(q: bool): void {
  print(if q { c"true" } else { c"false" })
}
