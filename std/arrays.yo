import std/ops

pub type []<T> = {
  len: u32,
  data: ptr<T>,
}

#meta(getUnchecked)
fun getUnchecked<T>(elems: ptr<T>, index: u32): T

#meta(setUnchecked)
fun setUnchecked<T>(mut elems: ptr<T>, index: u32, value: T): void

pub fun []<T>(a: T[], index: u32): T {
  a.data.getUnchecked(index)
}

pub fun []=<T>(mut a: T[], index: u32, value: T): void {
  a.data.setUnchecked(index, value)
}

pub fun last<T>(a: T[]): T {
  a[a.len - 1u32]
}
