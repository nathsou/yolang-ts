#![noImplicitFoundationsImport]
import std/ops [`+`, `-`, `<`]

pub type Array<T> = {
  len: u32,
  data: ptr<T>,
}

#meta
pub fun getUnchecked<T>(elems: ptr<T>, index: u32): T

#meta
pub fun setUnchecked<T>(mut elems: ptr<T>, index: u32, value: T): void

pub fun `[]`<T>(a: T[], index: u32): T {
  a.data.getUnchecked(index)
}

pub fun `[]=`<T>(mut a: T[], index: u32, value: T): void {
  a.data.setUnchecked(index, value)
}

pub fun last<T>(a: T[]): T {
  a[a.len - 1]
}

pub fun reverseInPlace<T>(mut buf: T[], start: u32, end: u32): void {
  mut i = start
  mut j = end

  while i < j {
    let tmp = buf[i]
    buf[i] = buf[j]
    buf[j] = tmp
    i += 1
    j -= 1
  }
}
